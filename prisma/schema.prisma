generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(uuid())
  email               String               @unique
  name                String?
  image               String?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  chatSession         ChatSession[]
  images              Images[]
  imagesPromptHistory ImagePromptHistory[]
}

model ChatSession {
  id          String        @id @default(uuid())
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  chatHistory ChatHistory[]
}

model ChatHistory {
  id            String      @id @default(uuid())
  prompt        String
  message       String
  chatSessionId String
  chatSession   ChatSession @relation(fields: [chatSessionId], references: [id], onDelete: Cascade)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Images {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  imageUrl  String
  prompt    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ImagePromptHistory {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  imageUrl  String
  prompt    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
